vSIS Signature – Parameter Reference (for tuning)

This file documents the parameters that control the end-to-end protocol and where they are defined or derived in the codebase. Use it as a checklist when sweeping configurations or reproducing results.

Global system parameters (System/System.go)
- N: ring degree (power of two). File: System/System.go: line ~22
  - Used everywhere to size polynomials and the NTT.
  - Change here, then regenerate parameters via `go run ./cmd`.
- Q: modulus q (must be prime). File: System/System.go
  - Many routines assume q is prime (e.g., modular inverses via Fermat).
  - If you change q, ensure NTT-friendly prime and update A/B matrices.
- Base (t): gadget base. File: System/System.go
  - Influences gadget dimension K = ceil(log_t(q)); higher base reduces K.
- K: gadget length. File: System/System.go (computed)
  - Derived from Base and Q; persisted into params and keys.
- SigmaT: Gaussian width σ_t. File: System/System.go (from Preimage_Sampler.CalculateParams)
- Sigma: smoothing parameter σ = σ_t/(t+1). File: System/System.go
- Bound: spectral/norm bound s. File: System/System.go
- Beta: public L2 bound β = ceil(Bound). File: System/System.go

Hash parameters (vSIS-HASH)
- B-matrix: four polynomials sampled uniformly in R_q. File: System/System.go writes Parameters/Bmatrix.json
  - Used by ComputeBBSHash. Stored and reused across Signing and Verifying.
  - Note: ComputeBBSHash NTT-lifts m/x0/x1 in place.

Trapdoor / Sampler parameters (Preimage_Sampler)
- Env toggles (docs/tags_and_options.md documents these):
  - S_CONST: override spectral-bound constant used by SpectralBound.
  - SIGMA_CONST: override smoothing parameter constant in CalculateParams.
  - ALPHA_MODE: set `GEN` to use α=(t+1)σ; otherwise α=2σ in GaussSamp.
  - CENTER_SYNDROME: `1` to center the syndrome before G-sampling.
  - RANDOMIZED_ROUNDING: `0` to disable in perturbation sampling.
- Derived:
  - K = ceil(log_t(q)) set at TrapGen runtime from Base and q.
  - CreateGadgetMatrix uses Base and K to build gadget rows.

DECS (small-domain PCS) parameters (DECS/decs_types.go)
- Params struct (see DefaultParams in decs_types.go):
  - Eta: number of mask polynomials (η). Default in code; used by Commit/Eval.
  - Degree: maximum allowed degree for P and M. Must be < N.
  - NonceBytes: per-leaf nonce length λ (security parameter for Merkle leaves).
- Implementation notes:
  - Leaf packing uses uint64 for P/M values and uint32 for the index; both prover and verifier must match.

LVCS parameters (LVCS)
- r: number of committed rows = witness columns + auxiliaries. Set in the simulation and PCS wrapper.
- ell (ℓ): number of masked points per row; chosen by caller (simulation)
  - Controls leak budget and tail size: masked indices lie in [ncols, ncols+ℓ).
- ncols: size of Ω. In tests set to SimOpts.Ncols; ω points are taken from the NTT grid.
- Verifier state also stores DECS params (Eta, Degree, NonceBytes).

PIOP (PACS) batching parameters
- Ω (omega): evaluation set, length s = |Ω|. Chosen in simulation as the first s NTT points.
- ℓ: blinding points per row (same as LVCS ℓ). Appears in degree bound dQ = s + ℓ − 1.
- ρ (rho): number of masking rows Q_i(X). In tests often 1; increase to reduce soundness error.
- GammaPrime, gammaPrime: Fiat–Shamir matrices for Eq.(4) aggregation (ρ×|F_par|, ρ×|F_agg|).
- BoundSpec (PIOP/bound_spec.go):
  - R = 2^W: radix for limb decomposition of β^2.
  - W: bits per limb (choose so that R < q).
  - LS: number of limbs (derived from β^2 base-R decomposition).
  - Beta2: limb array of β^2 in base R (little-endian). Used in aggregated sum constraints.
- Carries and slack:
  - Wc: carry-bit width; minimal is ceil(log2 |Ω|) + 1. Controls CBits allocation.

Tuning guidance
- Security level and performance tradeoffs:
  - Increase N and choose a larger NTT-friendly prime q to reduce collisions and improve soundness; increases runtime and memory.
  - Base t: larger base reduces K (fewer gadget polys) but changes sampler constants.
  - ℓ: increasing ℓ grows the masked tail and commitment size; strengthens LVCS linear-map binding with more openings.
  - ρ: increases number of Q rows; strengthens PACS Eq.(4) binding at linear cost.
  - Degree: must exceed maximal row polynomial degree (s+ℓ−1) but be < N.
- Practical checklist after any change:
  - Regenerate Parameters/Parameters.json and Parameters/Bmatrix.json.
  - Rebuild keypair (public/private key JSON) or ensure compatibility.
  - Run `go test ./...` to exercise DECS/LVCS/PIOP tests.
